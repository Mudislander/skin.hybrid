<?xml version="1.0" encoding="utf-8"?>
<includes>
    <include name="CommonBackground">
        <control type="group">
            <!-- Global  Image Backgound  -->
            <visible>!Skin.HasSetting(MultiImageBackground) + !Skin.HasSetting(EnableHolidayEffects)</visible>
            <visible>!Player.HasVideo | Skin.HasSetting(HideNowPlayingFanart)</visible>
            <control type="multiimage">
                <include>Dimensions_Fullscreen</include>
                <imagepath background="true">$INFO[Skin.String(GlobalBackGroundPath)]</imagepath>
                <timeperimage>8000</timeperimage>
                <randomize>true</randomize>
                <fadetime>FanartCrossfadeTime</fadetime>
                <visible>!IsEmpty(Skin.String(GlobalBackGroundPath))</visible>
            </control>
            <control type="image">
                <include>Dimensions_Fullscreen</include>
                <aspectratio>scale</aspectratio>
                <texture background="true" fallback="special://skin/backgrounds/SKINDEFAULT.jpg">$INFO[Skin.CurrentTheme,special://skin/backgrounds/,.jpg]</texture>
                <include>BackgroundFade</include>
                <fadetime>FanartCrossfadeTime</fadetime>
                <include>Window_OpenClose_Animation</include>
                <visible>IsEmpty(Skin.String(GlobalBackGroundPath))</visible>
            </control>
        </control>
        <control type="group">
            <!-- Global	Holiday Effect	-->
            <visible>Skin.HasSetting(EnableHolidayEffects)</visible>
            <visible>!Player.HasVideo | Skin.HasSetting(HideNowPlayingFanart)</visible>
            <control type="multiimage" id="5051">
                <description>holiday Theme Images</description>
                <include>Dimensions_Fullscreen</include>
                <imagepath background="true">$INFO[Skin.String(HolidayThemePath)]</imagepath>
                <timeperimage>8000</timeperimage>
                <randomize>true</randomize>
                <fadetime>1000</fadetime>
                <visible>!IsEmpty(Skin.String(HolidayThemePath))</visible>
            </control>
            <control type="image">
                <description>holiday Theme Default Image</description>
                <include>Dimensions_Fullscreen</include>
                <aspectratio>scale</aspectratio>
                <include>BackgroundFade</include>
                <fadetime>FanartCrossfadeTime</fadetime>
                <include>Window_OpenClose_Animation</include>
                <texture>special://skin/extras/holiday/xmastree.jpg</texture>
                <visible>IsEmpty(Skin.String(HolidayThemePath)) | IsEmpty(Control.GetLabel(5051))</visible>
            </control>
        </control>
        <control type="group">
            <!-- Multi Image Backgounds on Home  -->
            <visible>Window.IsVisible(Home) + Skin.HasSetting(MultiImageBackground) + !Skin.HasSetting(EnableHolidayEffects)</visible>
            <visible>!Player.HasVideo | Skin.HasSetting(HideNowPlayingFanart) | !Skin.HasSetting(HideNowPlayingWidget)</visible>
            <control type="multiimage">
                <include>Dimensions_Fullscreen</include>
                <aspectratio>scale</aspectratio>
                <imagepath background="true">$VAR[HomeMenuItemBackground]</imagepath>
                <timeperimage>8000</timeperimage>
                <randomize>true</randomize>
                <fadetime>1000</fadetime>
            </control>
            <control type="group">
                <include>BackgroundFade</include>
                <fadetime>FanartCrossfadeTime</fadetime>
                <include>Window_OpenClose_Animation</include>
                <include>LiveContentBackgrounds</include>
                <visible>StringCompare(Container(9000).ListItem.Property(Background),Live)</visible>
            </control>
        </control>
        <control type="group">
            <!-- Multi Image Backgounds NOT on Home  -->
            <visible>!Window.IsVisible(Home) + Skin.HasSetting(MultiImageBackground) + !Skin.HasSetting(EnableHolidayEffects)</visible>
            <visible>!Player.HasVideo | Skin.HasSetting(HideNowPlayingFanart)</visible>
            <control type="multiimage">
                <include>Dimensions_Fullscreen</include>
                <aspectratio>scale</aspectratio>
                <imagepath background="true">$VAR[CommonMenuItemBackground]</imagepath>
                <timeperimage>8000</timeperimage>
                <randomize>true</randomize>
                <fadetime>1000</fadetime>
            </control>
        </control>
        <control type="group">
            <!--Show FanArt Not on Home + Not Playing Video + Not HideBackgroundFanart 	-->
            <visible>!Window.IsVisible(Home) + !Skin.HasSetting(HideBackgroundFanart)</visible>
            <visible>!Player.HasVideo | Skin.HasSetting(HideNowPlayingFanart)</visible>
            <control type="image">
                <include>Dimensions_Fullscreen</include>
                <aspectratio>scale</aspectratio>
                <texture background="true">$INFO[Fanart.Image]</texture>
                <include>BackgroundFade</include>
                <fadetime>FanartCrossfadeTime</fadetime>
                <include>Window_OpenClose_Animation</include>
                <visible>!IsEmpty(Fanart.Image) + [Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes)]</visible>
            </control>
            <control type="image">
                <include>Dimensions_Fullscreen</include>
                <aspectratio>scale</aspectratio>
                <texture background="true">$INFO[ListItem.Art(fanart)]</texture>
                <include>BackgroundFade</include>
                <fadetime>FanartCrossfadeTime</fadetime>
                <include>Window_OpenClose_Animation</include>
                <visible>!IsEmpty(ListItem.Property(Fanart_Image))</visible>
            </control>
            <control type="multiimage">
                <include>Dimensions_Fullscreen</include>
                <aspectratio>scale</aspectratio>
                <imagepath background="true">$VAR[CommonMenuItemBackground]</imagepath>
                <timeperimage>8000</timeperimage>
                <randomize>true</randomize>
                <fadetime>1000</fadetime>
                <visible>[StringCompare(ListItem.Label,..) | IsEmpty(ListItem.Property(Fanart_Image))] + Container.Content(Episodes) + IsEmpty(Fanart.Image)</visible>
            </control>
        </control>
        <control type="image">
            <left>0</left>
            <top>90r</top>
            <width>1780</width>
            <height>90</height>
            <texture>floor.png</texture>
            <animation effect="fade" time="250" condition="Window.Previous(Home)">WindowOpen</animation>
            <animation effect="fade" time="250" condition="Window.Next(Home)">WindowClose</animation>
        </control>
        <control type="image">
            <include>Dimensions_Fullscreen</include>
            <texture>special://skin/backgrounds/media-overlay.jpg</texture>
            <include>VisibleFadeEffect</include>
            <visible>Player.HasVideo + Window.IsVisible(Home) + [StringCompare(Container(9000).ListItem.Property(HiLiteItem),FullScreen) | Skin.HasSetting(HideNowPlayingWidget) + !Skin.HasSetting(HideNowPlayingFanart)]</visible>
        </control>
        <control type="image">
            <include>Dimensions_Fullscreen</include>
            <texture>special://skin/backgrounds/media-overlay.jpg</texture>
            <include>VisibleFadeEffect</include>
            <visible>Player.HasVideo + !Window.IsVisible(Home) + !Skin.HasSetting(HideNowPlayingFanart)</visible>
        </control>
        <control type="group">
            <!-- CDWall No Diffuse -->
            <include>AlbumArtMusicVizWall</include>
            <visible>!SubString(Window(videolibrary).Property(TvTunesIsAlive),true)</visible>
            <visible>Window.IsVisible(Home) + Player.HasAudio + StringCompare(Container(9000).ListItem.Property(HiLiteItem),FullScreen)</visible>
            <visible>Skin.HasSetting(NoDiffuseVizFanart) | IsEmpty(Visualisation.Name) | stringcompare(Visualisation.Name,Waveform) | stringcompare(Visualisation.Name,DirectX Spectrum) | stringcompare(Visualisation.Name,OpenGL Spectrum)</visible>
        </control>
        <control type="visualisation">
            <include>Dimensions_Fullscreen</include>
            <visible>!SubString(Window(videolibrary).Property(TvTunesIsAlive),true)</visible>
            <visible>Window.IsVisible(Home) + Player.HasAudio + StringCompare(Container(9000).ListItem.Property(HiLiteItem),FullScreen)</visible>
        </control>
        <control type="videowindow">
            <include>Dimensions_Fullscreen</include>
            <visible>Player.HasVideo + Window.IsVisible(Home) + [StringCompare(Container(9000).ListItem.Property(HiLiteItem),FullScreen) | Skin.HasSetting(HideNowPlayingWidget) + !Skin.HasSetting(HideNowPlayingFanart)]</visible>
        </control>
        <control type="videowindow">
            <include>Dimensions_Fullscreen</include>
            <visible>Player.HasVideo + !Window.IsVisible(Home) + !Skin.HasSetting(HideNowPlayingFanart)</visible>
        </control>
        <control type="group">
            <visible>!SubString(Window(videolibrary).Property(TvTunesIsAlive),true)</visible>
            <visible>Window.IsVisible(Home) + Player.HasAudio + StringCompare(Container(9000).ListItem.Property(HiLiteItem),FullScreen)</visible>
            <control type="group">
                <!-- CDWall Diffused -->
                <include>AlbumArtMusicVizWall</include>
                <visible>!IsEmpty(Visualisation.Name) + !stringcompare(Visualisation.Name,Waveform) + !stringcompare(Visualisation.Name,DirectX Spectrum) + !stringcompare(Visualisation.Name,OpenGL Spectrum)</visible>
            </control>
            <control type="image">
                <include>Dimensions_Fullscreen</include>
                <colordiffuse>AAFFFFFF</colordiffuse>
                <texture background="true">$INFO[Player.Art(fanart)]</texture>
                <visible>!IsEmpty(Player.Art(fanart)) + !Skin.HasSetting(NoDiffuseVizFanart) + !Skin.HasSetting(HideArtistArtOSD)</visible>
                <fadetime>600</fadetime>
            </control>
            <control type="image">
                <include>Dimensions_Fullscreen</include>
                <texture background="true">$INFO[Player.Art(fanart)]</texture>
                <visible>!IsEmpty(Player.Art(fanart)) + Skin.HasSetting(NoDiffuseVizFanart) + !Skin.HasSetting(HideArtistArtOSD)</visible>
                <fadetime>600</fadetime>
            </control>
        </control>
    </include>
    <include name="ArtistExtraFanArt">
        <control type="multiimage" id="5043">
            <include>InvisibleButton</include>
            <imagepath background="true">$INFO[Player.FolderPath,,../extrafanart/]</imagepath>
            <visible>Player.HasAudio + !Player.IsInternetStream</visible>
        </control>
        <control type="multiimage" id="5044">
            <include>InvisibleButton</include>
            <imagepath background="true">$INFO[Skin.String(PhysicalMusicFolder)]$INFO[MusicPlayer.Artist,,/extrafanart/]</imagepath>
            <visible>Player.HasAudio + IsEmpty(Control.GetLabel(5043))</visible>
        </control>
    </include>
    <include name="ListedStudioIcon">
        <control type="image" id="5047">
            <include>InvisibleButton</include>
            <texture background="true">$INFO[ListItem.Studio,flagging/studio/,.png]</texture>
            <visible>!IsEmpty(ListItem.Studio)</visible>
        </control>
    </include>
    <include name="FanArtExtraThumbs">
        <control type="multiimage" id="5045">
            <include>InvisibleButton</include>
            <imagepath background="true">$INFO[ListItem.path,,extrathumbs/]</imagepath>
            <visible>!IsEmpty(ListItem.Title)</visible>
            <visible>Container.Content(Movies) | Container.Content(MusicVideos)</visible>
        </control>
    </include>
    <include name="MediaViewBackgrounds">
        <control type="group">
            <visible>!IsEmpty(ListItem.Title) + Skin.HasSetting(EnableAdditionalArtWork)</visible>
            <visible>!Player.HasVideo | Skin.HasSetting(HideNowPlayingFanart)</visible>
            <include>Window_OpenClose_Animation</include>
            <control type="image">
                <!-- Displays over other FanArt -->
                <include>Dimensions_Fullscreen</include>
                <aspectratio>scale</aspectratio>
                <texture background="true">$INFO[ListItem.icon]</texture>
                <include>BackgroundFade</include>
                <fadetime>FanartCrossfadeTime</fadetime>
                <!--fadetime>IconCrossfadeTime</fadetime-->
                <include>Window_OpenClose_Animation</include>
                <visible>Container.Content(Episodes) + !Skin.HasSetting(HideEpisodeThumb) + !stringcompare(ListItem.Label,..)</visible>
            </control>
            <control type="group">
                <visible>!Container.Content(Episodes) | Skin.HasSetting(HideEpisodeThumb) | stringcompare(ListItem.Label,..)</visible>
                <control type="image">
                    <include>Window_OpenClose_Animation</include>
                    <include>Dimensions_Fullscreen</include>
                    <include>VisibleFadeEffect</include>
                    <aspectratio>stretch</aspectratio>
                    <texture>black-back.png</texture>
                    <visible>!Skin.HasSetting(HideBackgroundFanart) + !Skin.HasSetting(DisableClearArt)</visible>
                    <visible>Skin.HasSetting(EnableFileSysArt) | !IsEmpty(ListItem.Art(clearart)) | !IsEmpty(ListItem.Art(characterart)) | !IsEmpty(ListItem.Art(tvshow.clearart)) | !IsEmpty(ListItem.Art(tvshow.characterart))</visible>
                </control>
                <control type="image">
                    <left>-200</left>
                    <top>500r</top>
                    <width>720</width>
                    <height>720</height>
                    <include>VisibleFadeEffect</include>
                    <fadetime>FanartCrossfadeTime</fadetime>
                    <aspectratio>stretch</aspectratio>
                    <texture background="true">$VAR[MediaDiscArt]</texture>
                    <animation effect="rotate" end="-45" center="auto" time="0" condition="true">Conditional</animation>
                    <visible>!Skin.HasSetting(DisableDiscArt)</visible>
                    <visible>!IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(EnableFileSysArt)</visible>
                </control>
                <control type="image">
                    <left>140</left>
                    <top>80</top>
                    <width>1000</width>
                    <height>562</height>
                    <include>VisibleFadeEffect</include>
                    <aspectratio align="left" aligny="bottom">keep</aspectratio>
                    <texture background="true">$VAR[MediaClearArt]</texture>
                    <visible>[!IsEmpty(ListItem.Art(clearart)) | Skin.HasSetting(EnableFileSysArt)] + !Container.Content(Episodes) + !Container.Content(Seasons) + !Skin.HasSetting(DisableClearArt)</visible>
                </control>
                <control type="image">
                    <left>140</left>
                    <top>80</top>
                    <width>1000</width>
                    <height>562</height>
                    <include>VisibleFadeEffect</include>
                    <aspectratio align="left" aligny="bottom">keep</aspectratio>
                    <texture background="true">$INFO[ListItem.Art(tvshow.clearart)]</texture>
                    <visible>!IsEmpty(ListItem.Art(tvshow.clearart)) + !Skin.HasSetting(DisableClearArt) + [Container.Content(Episodes) | Container.Content(Seasons)]</visible>
                </control>
                <control type="image">
                    <left>170</left>
                    <top>570r</top>
                    <width>512</width>
                    <height>512</height>
                    <include>VisibleFadeEffect</include>
                    <aspectratio align="left" aligny="bottom">keep</aspectratio>
                    <texture background="true">$INFO[ListItem.Art(characterart)]</texture>
                    <visible>IsEmpty(ListItem.Art(clearart)) + !IsEmpty(ListItem.Art(characterart)) + !Container.Content(Episodes) + !Container.Content(Seasons) + !Skin.HasSetting(DisableClearArt)</visible>
                    <animation effect="slide" end="214,0" time="0" condition="Control.IsVisible(51)">conditional</animation>
                    <animation effect="slide" end="214,-80" time="0" condition="Control.IsVisible(508)">conditional</animation>
                    <visible>!Control.IsVisible(500) + !Control.IsVisible(501) + !Control.IsVisible(505) + !Control.IsVisible(515)</visible>
                </control>
                <control type="image">
                    <left>170</left>
                    <top>570r</top>
                    <width>512</width>
                    <height>512</height>
                    <include>VisibleFadeEffect</include>
                    <aspectratio align="left" aligny="bottom">keep</aspectratio>
                    <texture background="true">$INFO[ListItem.Art(tvshow.characterart)]</texture>
                    <visible>IsEmpty(ListItem.Art(tvshow.clearart)) + !Skin.HasSetting(DisableClearArt) + !IsEmpty(ListItem.Art(tvshow.characterart)) + [Container.Content(Episodes) |  Container.Content(Seasons)]</visible>
                    <animation effect="slide" end="214,0" time="0" condition="Control.IsVisible(51)">conditional</animation>
                    <animation effect="slide" end="214,-80" time="0" condition="Control.IsVisible(508)">conditional</animation>
                    <visible>!Control.IsVisible(500) + !Control.IsVisible(501) + !Control.IsVisible(505) + !Control.IsVisible(515)</visible>
                </control>
            </control>
            <control type="grouplist">
                <description>Media Genre Flagging</description>
                <left>16</left>
                <top>96r</top>
                <width>1248</width>
                <align>center</align>
                <itemgap>0</itemgap>
                <orientation>horizontal</orientation>
                <include>SmallVideoGenreFlagging</include>
                <visible>Container.Content(TVShows) | Container.Content(Movies) | Container.Content(Episodes) | Container.Content(Seasons)</visible>
                <visible>!Control.IsVisible(508) + !Control.IsVisible(529) + !Control.IsVisible(555) + !Control.IsVisible(594)</visible>
            </control>
        </control>
        <control type="image">
            <left>0</left>
            <top>0</top>
            <width>650</width>
            <height>780</height>
            <texture>SideFade.png</texture>
            <!-- Shows through on Video & Audio -->
            <visible>Control.IsVisible(50) | Control.IsVisible(51) | Control.IsVisible(503) | Control.IsVisible(504) | Control.IsVisible(506) | Control.IsVisible(512) | Control.IsVisible(515) | Control.IsVisible(513) | Control.IsVisible(550) | Control.IsVisible(728)</visible>
        </control>
        <control type="image">
            <include>Dimensions_Fullscreen</include>
            <include>Window_OpenClose_Animation</include>
            <include>BackgroundFade</include>
            <aspectratio>stretch</aspectratio>
            <include condition="!IsEmpty(Skin.String(MediaPanelTrans))">TransparentEffect</include>
            <texture>black_content.png</texture>
            <!-- Shows through on Video & Audio -->
        </control>
    </include>
    <include name="VideoLogoArt">
        <control type="image">
            <left>252r</left>
            <top>72</top>
            <width>258</width>
            <height>100</height>
            <aspectratio align="center" aligny="bottom">keep</aspectratio>
            <texture background="true">$VAR[MediaLogoArt]</texture>
            <fadetime>IconCrossfadeTime</fadetime>
            <animation effect="rotate" start="0" end="-45" center="auto" time="0" condition="true">Conditional</animation>
            <visible>!IsEmpty(ListItem.Title) + Skin.HasSetting(EnableAdditionalArtWork) + !Skin.HasSetting(DisableLogoArt)</visible>
            <visible>!Player.HasVideo | Skin.HasSetting(HideNowPlayingFanart)</visible>
        </control>
    </include>
    <include name="FullScreenUsrInfo">
        <control type="image" id="1">
            <description>LOGO</description>
            <left>0</left>
            <top>0</top>
            <width>129</width>
            <height>49</height>
            <aspectratio aligny="top" align="left">keep</aspectratio>
            <texture>kodi-logo.png</texture>
            <include>VisibleFadeEffect</include>
            <include>Window_OpenClose_Animation</include>
            <visible>StringCompare(System.ProfileName,Master user)</visible>
            <visible>!Skin.HasSetting(HideOSDProfileClock)</visible>
            <visible>!Window.IsVisible(fullscreenvideo) | [!Skin.HasSetting(HideSeekBarOSD) + Window.IsActive(VideoOSD) | Player.ShowInfo]</visible>
        </control>
        <control type="label" id="1">
            <description>Logged User</description>
            <left>20</left>
            <top>0</top>
            <height>45</height>
            <width>350</width>
            <align>left</align>
            <aligny>center</aligny>
            <font>font28_title</font>
            <textcolor>lightgrey</textcolor>
            <shadowcolor>black</shadowcolor>
            <info>System.ProfileName</info>
            <include>VisibleFadeEffect</include>
            <include>Window_OpenClose_Animation</include>
            <visible>!StringCompare(System.ProfileName,Master user)</visible>
            <visible>!Skin.HasSetting(HideOSDProfileClock)</visible>
            <visible>!Window.IsVisible(fullscreenvideo) | [!Skin.HasSetting(HideSeekBarOSD) + Window.IsActive(VideoOSD) | Player.ShowInfo]</visible>
        </control>
        <control type="label" id="1">
            <description>Top Right Time Label</description>
            <left>270r</left>
            <top>0</top>
            <width>250</width>
            <height>30</height>
            <align>right</align>
            <aligny>center</aligny>
            <font>font28_title</font>
            <textcolor>lightgrey</textcolor>
            <shadowcolor>black</shadowcolor>
            <label>$INFO[System.Time]</label>
            <include>Window_OpenClose_Animation</include>
            <animation effect="slide" start="0,0" end="-40,0" time="100" condition="Window.IsVisible(Mutebug)">conditional</animation>
            <animation effect="slide" start="0,0" end="0,-50" time="100" condition="Window.IsVisible(busydialog)">conditional</animation>
            <visible>!Window.IsVisible(fullscreenvideo) | [!Skin.HasSetting(HideSeekBarOSD) + Window.IsActive(VideoOSD) | Player.ShowInfo]</visible>
            <visible>!Skin.HasSetting(HideOSDProfileClock)</visible>
        </control>
        <control type="label" id="1">
            <description>Top Right Date Label</description>
            <left>270r</left>
            <top>30</top>
            <width>250</width>
            <height>15</height>
            <align>right</align>
            <aligny>center</aligny>
            <font>font10</font>
            <textcolor>lightgrey</textcolor>
            <shadowcolor>black</shadowcolor>
            <label>$INFO[System.Date]</label>
            <include>Window_OpenClose_Animation</include>
            <animation effect="slide" start="0,0" end="-40,0" time="100" condition="Window.IsVisible(Mutebug)">conditional</animation>
            <animation effect="slide" start="0,0" end="0,-50" time="100" condition="Window.IsVisible(busydialog)">conditional</animation>
            <visible>!Window.IsVisible(fullscreenvideo) | [!Skin.HasSetting(HideSeekBarOSD) + Window.IsActive(VideoOSD) | Player.ShowInfo]</visible>
            <visible>!Skin.HasSetting(HideOSDProfileClock)</visible>
        </control>
    </include>
</includes>